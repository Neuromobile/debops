---
# .. vim: foldmarker=[[[,]]]:foldmethod=marker

# .. Copyright (C) 2020 Pedro Luis Lopez <pedroluis.lopezsanchez@gmail.com>
# .. Copyright (C) 2020 DebOps <https://debops.org/>
# .. SPDX-License-Identifier: GPL-3.0-or-later

# .. _prometheus_server__ref_defaults:

# debops.prometheus_server default variables
# ========================================

# .. contents:: Sections
#    :local:
#
# .. include:: ../../../../includes/global.rst


# APT packages [[[
# -------------------------------

# .. envvar:: prometheus_server__base_packages [[[
#
# List of the default APT packages to install for Prometheus Server support.
prometheus_server__base_packages: [ 'prometheus' ]

                                                                   # ]]]
# .. envvar:: prometheus_server__packages [[[
#
# List of additional APT packages to install with Prometheus Server.
prometheus_server__packages: []

                                                                   # ]]]
                                                                   # ]]]
# Basic configuration [[[
# -----------------------

# .. envvar:: prometheus_server__fqdn [[[
#
# The Fully Qualified Domain Name address on which the Prometheus server
# will be accessible.
prometheus_server__fqdn: '{{ ansible_hostname }}.{{ prometheus_server__domain }}'

                                                                   # ]]]
# .. envvar:: prometheus_server__domain [[[
#
# The DNS domain used by default to configure the main application FQDN.
prometheus_server__domain: '{{ ansible_local.core.domain
                               if (ansible_local|d() and ansible_local.core|d() and
                                   ansible_local.core.domain|d())
                               else ansible_domain }}'

                                                                   # ]]]
# .. envvar:: prometheus_server__allow [[[
#
# List of IP addresses or CIDR subnets which will be permitted to access the
# Prometheus server web interface. If the list is empty, anybody can access
# the service.
prometheus_server__allow: []

                                                                   # ]]]
# .. envvar:: prometheus_server__bind [[[
#
# A valid string consisting of a hostname or IP.
prometheus_server__bind: 'localhost'

                                                                   # ]]]
# .. envvar:: prometheus_server__port [[[
#
# Port number on which this Prometheus listens on.
prometheus_server__port: '9090'

                                                                   # ]]]
# .. envvar:: prometheus_server__basic_auth [[[
#
# Enable or disable HTTP Basic Authentication in the webserver frontend.
prometheus_server__basic_auth: True

                                                                   # ]]]
# .. envvar:: prometheus_server__basic_auth_realm [[[
#
# The HTTP Basic Auth realm used by Prometheus service.
prometheus_server__basic_auth_realm: 'Prometheus'

                                                                   # ]]]
# .. envvar:: prometheus_server__basic_auth_name [[[
#
# Name of the :command:`htpasswd` file stored in the
# :file:`/etc/nginx/private/` directory which contains HTTP Basic Auth
# credentials.
prometheus_server__basic_auth_name: 'prometheus'

                                                                   # ]]]
# .. envvar:: prometheus_server__basic_auth_users [[[
#
# List of user accounts which will be allowed access to Prometheus server
# service via HTTP Basic Auth. The passwords will be automatically generated by
# the :ref:`debops.nginx` role and stored in the :file:`secret/` directory on
# Ansible Controller. See :ref:`debops.secret` role for more details.
prometheus_server__basic_auth_users: '{{ ansible_local.core.admin_users
                                         if (ansible_local|d() and ansible_local.core|d() and
                                             ansible_local.core.admin_users|d())
                                         else [] }}'

                                                                   # ]]]
                                                                   # ]]]
# Prometheus default file [[[
# -------------------------------

# The variables below define the contents of the
# :file:`/etc/default/prometheus` configuration file.

# .. envvar:: prometheus_server__default_args [[[
#
# The configuration options which should be present in the default
# configuration file.
prometheus_server__args:

  - name: 'config.file'
    value: '/etc/prometheus/prometheus.yml'

  - name: 'web.listen-address'
    value: '{{ prometheus_server__bind + ":" + prometheus_server__port }}'

  - name: 'web.external-url'
    value: '{{ "https://" + prometheus_server__fqdn + "/" }}'

                                                                   # ]]]
                                                                   # ]]]
# Prometheus configuration file [[[
# -------------------------------

# The variables below define the contents of the
# :file:`/etc/prometheus/prometheus.yml` configuration file.

# .. envvar:: prometheus_server__configuration [[[
#
# The configuration options which should be present in the main
# configuration file.
prometheus_server__configuration:

    global: '{{ prometheus_server__global_configuration }}'
    rule_files: '{{ prometheus_server__rule_files_configuration }}'
    alerting: '{{ prometheus_server__alerting_configuration }}'
    scrape_configs: '{{ prometheus_exporter__combined_scrape_configs_configuration }}'
    remote_write: '{{ prometheus_server__remote_write_configuration }}'
    remote_read: '{{ prometheus_server__remote_read_configuration }}'

                                                                   # ]]]
# .. envvar:: prometheus_server__global_configuration [[[
#
# The global configuration options which should be present in the main
# configuration file.
prometheus_server__global_configuration:

    scrape_interval: '15s'
    evaluation_interval: '15s'

                                                                   # ]]]
# .. envvar:: prometheus_server__rule_files_configuration [[[
#
# The rule files configuration options which should be present in the main
# configuration file.
prometheus_server__rule_files_configuration: []

                                                                   # ]]]
# .. envvar:: prometheus_server__alerting_configuration [[[
#
# The alerting configuration options which should be present in the main
# configuration file.
prometheus_server__alerting_configuration:

  alert_relabel_configs: []
  alertmanagers: []

                                                                   # ]]]
# .. envvar:: prometheus_server__default_server_scrape_config_configuration [[[
#
# The default server scrape configuration options which should be present in the main
# configuration file.
prometheus_server__default_server_scrape_config_configuration:

  - job_name: 'prometheus'
    scrape_interval: '5s'
    scrape_timeout: '5s'
    static_configs:
      - targets: [ '{{ ("localhost" if prometheus_server__bind == "0.0.0.0" else
                       prometheus_server__bind) + ":" + prometheus_server__port }}' ]
    relabel_configs:
      - target_label:  'instance'
        replacement:   '{{ ansible_hostname }}:{{ prometheus_server__port }}'

                                                                   # ]]]
# .. envvar:: prometheus_server__default_scrape_configs_configuration [[[
#
# The default scrape configurations options which should be present in the main
# configuration file. It implements file discovery for node exporter
prometheus_server__default_scrape_configs_configuration:

  - job_name: 'node'
    file_sd_configs:
      - files:
        - '/etc/prometheus/file_sd_configs.d/node.*.json'
    relabel_configs:
      - source_labels: ['__address__']
        separator:     ':'
        regex:         '([^.:]*)[.].*:(.*)' # Get hostname from address
        target_label:  'instance'
        replacement:   '${1}:${2}'

                                                                   # ]]]
# .. envvar:: prometheus_server__scrape_configs_configuration [[[
#
# The scrape configurations options which should be present in the main
# configuration file.
prometheus_server__scrape_configs_configuration: []

                                                                   # ]]]
# .. envvar:: prometheus_exporter__combined_scrape_configs_configuration [[[
#
# The variable which combines all other Prometheus scrape
# configurations options and is used in the role tasks and templates.
prometheus_exporter__combined_scrape_configs_configuration: '{{ prometheus_server__default_server_scrape_config_configuration
                                                                + prometheus_server__default_scrape_configs_configuration
                                                                + prometheus_server__scrape_configs_configuration }}'

                                                                   # ]]]
# .. envvar:: prometheus_server__remote_write_configuration [[[
#
# The remote write configuration options which should be present in the main
# configuration file.
prometheus_server__remote_write_configuration: []

                                                                   # ]]]
# .. envvar:: prometheus_server__remote_read_configuration [[[
#
# The remote read configuration options which should be present in the main
# configuration file.
prometheus_server__remote_read_configuration: []

                                                                   # ]]]
                                                                   # ]]]
# Configuration for other Ansible roles [[[
# -----------------------------------------

# .. envvar:: prometheus_server__etc_services__dependent_list [[[
#
# Configuration for the :ref:`debops.etc_services` Ansible role.
prometheus_server__etc_services__dependent_list:

  - name: 'prometheus-server'
    port: '{{ prometheus_server__port }}'

                                                                   # ]]]
# .. envvar:: prometheus_server__nginx__dependent_htpasswd [[[
#
# HTTP Basic Auth password configuration for the :ref:`debops.nginx` Ansible
# role.
prometheus_server__nginx__dependent_htpasswd:
  name: '{{ prometheus_server__basic_auth_name }}'
  users: '{{ prometheus_server__basic_auth_users }}'

                                                                   # ]]]
# .. envvar:: prometheus_server__nginx__dependent_servers [[[
#
# Server configuration for the :ref:`debops.nginx` Ansible role.
prometheus_server__nginx__dependent_servers:
  - name: '{{ prometheus_server__fqdn }}'
    by_role: 'debops.prometheus_server'
    filename: 'debops.prometheus_server'
    type: 'proxy'
    proxy_pass: 'http://prometheus_server'
    proxy_redirect: 'default'
    allow: '{{ prometheus_server__allow }}'
    auth_basic: '{{ prometheus_server__basic_auth|bool }}'
    auth_basic_realm: '{{ prometheus_server__basic_auth_realm }}'
    auth_basic_name: '{{ prometheus_server__basic_auth_name }}'

                                                                   # ]]]
# .. envvar:: prometheus_server__nginx__dependent_upstreams [[[
#
# Upstream configuration for the :ref:`debops.nginx` Ansible role.
prometheus_server__nginx__dependent_upstreams:
  - name: 'prometheus_server'
    server: '{{ ("localhost" if prometheus_server__bind == "0.0.0.0" else
                prometheus_server__bind) + ":" + prometheus_server__port }}'
                                                                   # ]]]
                                                                   # ]]]
